# This is a basic workflow to help you get started with Actions

name: workspace deployment
on:
    push:
        branches: [ workspace_publish ]
    workflow_dispatch:
      inputs:
        resourceGroupName:
          description: 'Synapse resource group name'
          required: true
        SynapseWorkspaceName:
          description: 'Synapse Workspace name'
          required: true
        armTemplateFile:
          description: 'ARM template file name'
          required: false
          default: 'TemplateForWorkspace.json'
        armTemplateParametersFile:
          description: 'ARM template parameters file name'
          required: false
          default: 'TemplateParametersForWorkspace.json'
        additionalParameters:
          description: 'Parameters which will be replaced in the ARM template'
          required: false
          default: ''
        skipAzModuleInstallation:
          description: 'Parameters which skip the Az module installation'
          required: false
          default: 'false'

env:
  TargetResourceGroup: "synapse-demo-prod"
  SourceWorkspaceName: "dcucereavii"
  TargetWorkspaceName: "dcucereavii-prod"
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel 
jobs:
  release:
      runs-on: windows-latest
      environment: PROD
      steps:
 
        - name: Checkout collaboration branch
          uses: actions/checkout@v3
          with:
            ref: main
        - run: |
            ls
        - name: Checkout workspace_publish branch
          uses: actions/checkout@v3
          with:
            ref: workspace_publish
        - run: |
            ls
        - name: Build PROD        
          uses: Azure/synapse-workspace-deployment@V1.7.0
          with:
            TargetWorkspaceName: '${{ github.event.inputs.SynapseWorkspaceName }}'
            TemplateFile: './dcucereavii/TemplateForWorkspace.json'
            ParametersFile: './dcucereavii/TemplateParametersForWorkspace.json'
            environment: Azure Public
            resourceGroup: '${{ github.event.inputs.resourceGroupName }}'
            clientId: '${{secrets.CLIENT_ID}}'
            clientSecret:  '${{secrets.CLIENT_SECRET}}'
            subscriptionId: '${{ secrets.SUBSCRIPTION_ID }}'
            tenantId: '${{ secrets.TENANT_ID }}'
            managedIdentity: 'False'
            operation: deploy
